Это простой симулятор системы прицеливания. В файле AngryBirdsTask реализуйте функцию расчета угла прицеливания, в зависимости от начальной скорости снаряда и дальности до цели. Если решения не существует, метод должен возвращать double.NaN.

Проверьте корректность своего решения, запустив проект.

Вы можете изучить устройство проекта — это будет полезно, но для выполнения этого задания это совсем не обязательно. Более того, будьте готовы к тому, что в проекте активно используются ещё не пройденные темы.

Детали:

Сопротивлением воздуха можно пренебречь
Ускорение свободного падения g = 9.8 м/с2
Иногда может существовать два решения: навесной траекторией и прямой наводкой. Вам нужно решение прямой наводкой, то есть с минимальным временем подлёта снаряда.
Освежить свои знания по физике всегда можно в википедии прочитав статью про равноускоренное движение
###################################################################CODE#################################################################### 

using System;

namespace AngryBirds
{
	public static class AngryBirdsTask
	{
		public static double FindSightAngle(double v, double distance)
		{
            return Math.Asin(distance *9.8 / (v * v))/ 2;
            return Math.PI / 4;
		}
	}
}
